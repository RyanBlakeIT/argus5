// Copyright (c) 2017
// Author: Jeff Weisberg <jaw @ tcp4me.com>
// Created: 2017-Sep-14 11:02 (EDT)
// Function: save+restore

package argus

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io/ioutil"
	"os"
)

func Load(file string, thing interface{}) (er error) {

	js, err := ioutil.ReadFile(file)
	if err != nil {
		return err
	}

	js = removeLeadingComment(js)

	// if the save file is corrupt, the restore may panic
	defer func() {
		if err := recover(); err != nil {
			er = fmt.Errorf("error: %v", err)
		}
	}()

	err = json.Unmarshal(js, thing)
	if err != nil {
		return err
	}

	return nil
}

func Save(file string, thing interface{}) error {

	temp := file + ".tmp"

	js, _ := json.Marshal(thing)

	fd, err := os.Create(temp)
	if err != nil {
		return err
	}

	// people upgrading from an old version may try editing by hand
	fd.WriteString("// autogenerated file - do not edit\n")

	fd.Write(js)
	fd.Close()
	os.Rename(temp, file)

	return nil
}

func removeLeadingComment(s []byte) []byte {

	// remove the one comment that Save added
	if bytes.HasPrefix(s, []byte("//")) {
		nl := bytes.Index(s, []byte("\n"))
		s = s[nl:]
	}
	return s
}
